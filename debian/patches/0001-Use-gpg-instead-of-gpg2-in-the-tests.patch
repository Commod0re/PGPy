From: Daniel Kahn Gillmor <dkg@fifthhorseman.net>
Date: Sun, 18 Dec 2016 19:50:28 +0100
Subject: Use "gpg" instead of "gpg2" in the tests

In debian stretch and later, we ship gpg 2 as /usr/bin/gpg, and only
bother supplying gpg2 as an alias in a separate package.
---
 tests/conftest.py | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/tests/conftest.py b/tests/conftest.py
index 17be293..009d06d 100644
--- a/tests/conftest.py
+++ b/tests/conftest.py
@@ -57,7 +57,7 @@ def _run(bin, *binargs, **pkw):
     return cmdo, cmde
 
 
-_gpg_bin = _which('gpg2')
+_gpg_bin = _which('gpg')
 _gpg_args = ('--options', './pgpy.gpg.conf', '--expert', '--status-fd')
 _gpg_env = {}
 _gpg_env['GNUPGHOME'] = os.path.abspath(os.path.abspath('tests/testdata'))
@@ -249,13 +249,13 @@ def pytest_configure(config):
     print("== PGPy Test Suite ==")
 
     # ensure commands we need exist
-    for cmd in ['gpg2', 'pgpdump']:
+    for cmd in ['gpg', 'pgpdump']:
         if _which(cmd) is None:
             print("Error: Missing Command: " + cmd)
             exit(-1)
 
     # get the GnuPG version
-    gpg_ver.parse(_run(_which('gpg2'), '--version')[0].splitlines()[0].split(' ')[-1])
+    gpg_ver.parse(_run(_which('gpg'), '--version')[0].splitlines()[0].split(' ')[-1])
 
     # get the pgpdump version
     v, _ = _run(_which('pgpdump'), '-v', stderr=subprocess.STDOUT)
