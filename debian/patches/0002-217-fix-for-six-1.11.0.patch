From: Michael Greene <a.minor.threat@gmail.com>
Date: Mon, 18 Sep 2017 12:41:16 -0700
Subject: #217 - fix for six 1.11.0

(cherry picked from commit 28920bc8b6df27c26c8c62dcbe1861f75aebb7b7)
---
 pgpy/types.py | 7 +++----
 1 file changed, 3 insertions(+), 4 deletions(-)

diff --git a/pgpy/types.py b/pgpy/types.py
index b4a3d71..1a14676 100644
--- a/pgpy/types.py
+++ b/pgpy/types.py
@@ -144,6 +144,7 @@ class Armorable(six.with_metaclass(abc.ABCMeta)):
 
             except (binascii.Error, TypeError) as ex:
                 six.raise_from(PGPError, ex)
+                six.raise_from(PGPError(str(ex)), ex)
 
         if m['crc'] is not None:
             m['crc'] = Header.bytes_to_int(base64.b64decode(m['crc'].encode()))
@@ -258,7 +259,6 @@ class ParentRef(object):
 
 
 class PGPObject(six.with_metaclass(abc.ABCMeta, object)):
-    __metaclass__ = abc.ABCMeta
 
     @staticmethod
     def int_byte_len(i):
@@ -540,7 +540,7 @@ class MetaDispatchable(abc.ABCMeta):
                             nh.parse(packet)
 
                         except Exception as ex:
-                            six.raise_from(PGPError, ex)
+                            six.raise_from(PGPError(str(ex)), ex)
 
                         header = nh
 
@@ -560,7 +560,7 @@ class MetaDispatchable(abc.ABCMeta):
                 obj.parse(packet)
 
             except Exception as ex:
-                six.raise_from(PGPError, ex)
+                six.raise_from(PGPError(str(ex)), ex)
 
         else:
             obj = _makeobj(cls)
@@ -569,7 +569,6 @@ class MetaDispatchable(abc.ABCMeta):
 
 
 class Dispatchable(six.with_metaclass(MetaDispatchable, PGPObject)):
-    __metaclass__ = MetaDispatchable
 
     @abc.abstractproperty
     def __headercls__(self):  # pragma: no cover
